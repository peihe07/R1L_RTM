services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: r1l_rtm_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: requirement_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rtm_network

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: r1l_rtm_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/requirement_db
      CORS_ORIGINS: http://localhost:3001
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./data:/data
    networks:
      - rtm_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Vue.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: r1l_rtm_frontend
    ports:
      - "3001:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - rtm_network
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev

volumes:
  postgres_data:

networks:
  rtm_network:
    driver: bridge
